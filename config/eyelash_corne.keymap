#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        hold_tab: hold_tab {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAB";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "hold-preferred";
        };

        scroll_encoder: scroll_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            label = "SCROLL_ENCODER";
            #sensor-binding-cells = <0>;
            bindings = <&kp PAGE_DOWN>, <&kp PAGE_UP>;
        };

        task_up_down: task_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            label = "TASK_UP_DOWN";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_AL_NEXT_TASK>, <&kp C_AL_PREVIOUS_TASK>;
        };

        layer_toggle_1: layer_toggle_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TOGGLE_1";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&tog 1>;

            tapping-term-ms = <500>;
        };

        layer_toggle_2: layer_toggle_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TOGGLE_2";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&tog 2>;

            tapping-term-ms = <500>;
        };

        back_slash: back_slash {
            compatible = "zmk,behavior-mod-morph";
            label = "BACK_SLASH";
            bindings = <&kp BACKSPACE>, <&kp BACKSLASH>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        rotate_scroll: rotate_scroll {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "ROTATE_SCROLL";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESC             &kp Q  &kp W  &kp E                       &kp R            &kp T                                                    &mmv MOVE_UP                     &kp Y        &kp U            &kp I      &kp O    &kp P     &back_slash
&mt LEFT_SHIFT TAB  &kp A  &kp S  &kp D                       &kp F            &kp G                                    &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp H        &kp J            &kp K      &kp L    &kp SEMI  &mt RIGHT_SHIFT ENTER
&kp LCTRL           &kp Z  &kp X  &kp C                       &kp V            &kp B        &mt LG(L) LC(LA(DELETE))                    &mmv MOVE_DOWN                   &kp N        &kp M            &kp COMMA  &kp DOT  &kp FSLH  &kp APOS
                                  &hold_tab LEFT_ALT LA(TAB)  &layer_toggle_1  &lt 3 SPACE                                                                               &lt 3 SPACE  &layer_toggle_2  &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_AC_ZOOM_IN C_AC_ZOOM_OUT>;
        };

        lower_number {
            bindings = <
&kp F2     &kp LC(X)  &kp LC(C)  &kp UP         &kp LC(V)  &kp LA(TAB)                               &msc SCRL_UP                     &kp EQUAL  &kp N7  &kp N8               &kp N9  &kp HOME  &trans
&kp LC(S)  &kp LC(Z)  &kp LEFT   &kp DOWN       &kp RIGHT  &kp LC(Y)                 &msc SCRL_LEFT  &mkp RCLK       &msc SCRL_RIGHT  &kp MINUS  &kp N4  &kp N5               &kp N6  &kp END   &trans
&trans     &trans     &trans     &kp LG(LS(S))  &trans     &trans       &kp LG(P)                    &msc SCRL_DOWN                   &kp FSLH   &kp N1  &kp N2               &kp N3  &trans    &kp DEL
                                 &trans         &trans     &trans                                                                     &trans     &kp N0  &kp C_AL_CALCULATOR
            >;

            label = "number";
            sensor-bindings = <&inc_dec_kp C_AC_ZOOM_IN C_AC_ZOOM_OUT>;
        };

        raise_config {
            display-name = "Config";
            bindings = <
&kp TILDE        &trans        &kp LEFT_PARENTHESIS  &kp PAGE_UP    &kp RIGHT_PARENTHESIS  &trans                                        &mmv MOVE_UP                     &trans    &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &kp N0    &bt BT_NXT
&rgb_ug RGB_TOG  &trans        &kp LEFT_BRACKET      &kp PAGE_DOWN  &kp RIGHT_BRACKET      &bt BT_CLR_ALL                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &mkp MB4  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp HOME  &kp PG_UP
&rgb_ug RGB_EFF  &bt BT_SEL 0  &bt BT_SEL 1          &bt BT_SEL 2   &bt BT_SEL 3           &bt BT_SEL 4    &kp C_MUTE                    &mmv MOVE_DOWN                   &mkp MB5  &msc SCRL_UP    &mkp MCLK       &msc SCRL_DOWN   &kp END   &kp PG_DN
                                                     &trans         &trans                 &trans                                                                         &trans    &trans          &trans
            >;

            sensor-bindings = <&rgb_encoder>;
            label = "config";
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&studio_unlock  &kp F1      &kp F2     &kp F3       &kp F4     &kp F5                                  &mmv MOVE_UP                     &kp F6       &kp F7     &kp F8       &kp F9      &kp F10          &kp F11
&trans          &trans      &mkp LCLK  &mkp MCLK    &mkp RCLK  &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bootloader  &mkp LCLK  &mkp MCLK    &mkp RCLK   &kp PRINTSCREEN  &kp F12
&trans          &sys_reset  &trans     &bootloader  &trans     &mkp MB5  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans       &trans     &bootloader  &sys_reset  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                       &trans       &trans     &trans                                                                   &trans       &trans     &trans
            >;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH   &kp DLLR   &kp PRCNT                            &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&trans  &bt BT_CLR    &mkp LCLK     &mkp MCLK  &mkp RCLK  &mkp MB4             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &out OUT_USB  &out OUT_BLE  &none      &none      &mkp MB5   &trans                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                    &trans     &trans     &kp SPACE                                                             &kp RET    &trans     &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                                    &trans  &trans  &trans
            >;
        };
    };
};
